"use client";

import { useState, useEffect } from "react";
import { useRouter } from "next/navigation";
import { auth, provider } from "@/lib/firebase";
import { signInWithPopup, getRedirectResult, onAuthStateChanged, signOut } from "firebase/auth";

export default function Home() {
  const [videos, setVideos] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [user, setUser] = useState(null);
  const router = useRouter();

  useEffect(() => {
    if (!auth) return;

    const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {
      if (currentUser) {
        setUser(currentUser);
        router.push("/dashboard"); // ๋ก๊ทธ์ธ ํ ๋์๋ณด๋๋ก ์ด๋
      }
    });

    getRedirectResult(auth)
      .then((result) => {
        if (result && result.user) {
          setUser(result.user);
          router.push("/dashboard"); // ๋ก๊ทธ์ธ ํ ๋์๋ณด๋๋ก ์ด๋
        }
      })
      .catch((error) => {
        console.error("๋ก๊ทธ์ธ ์ค๋ฅ:", error);
      });

    return () => unsubscribe();
  }, [router]);

  const handleLogin = async () => {
    try {
      if (auth && provider) {
        await signInWithPopup(auth, provider); // ํ์ ๋ก๊ทธ์ธ
      }
    } catch (error) {
      console.error("๋ก๊ทธ์ธ ์ค๋ฅ:", error);
    }
  };

  const handleLogout = () => {
    if (auth) {
      signOut(auth)
        .then(() => {
          setUser(null);
          alert("๋ก๊ทธ์์ ๋์์ต๋๋ค.");
        })
        .catch((error) => console.error("โ ๋ก๊ทธ์์ ์ค๋ฅ:", error));
    }
  };

  return (
    <div style={{ textAlign: "center", padding: "20px" }}>
      <h2>Firebase Google ๋ก๊ทธ์ธ</h2>

      {/* ๐น ๋ก๊ทธ์ธ UI */}
      {user ? (
        <div>
          <p>๋ก๊ทธ์ธํ ์ฌ์ฉ์: {user.displayName} ({user.email})</p>
          <button onClick={handleLogout}>๋ก๊ทธ์์</button>
        </div>
      ) : (
        <button onClick={handleLogin}>Google ๋ก๊ทธ์ธ</button>
      )}
    </div>
  );
}